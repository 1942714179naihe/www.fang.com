<?php

namespace App\Models;
use  App\Observers\FangAttrObserver;
use Illuminate\Database\Eloquent\Model;

/**
 * App\Models\Fangattr
 *
 * @property int $id
 * @property int $pid 上级ID
 * @property string $field_name 字段名
 * @property string $name 属性名称
 * @property string $icon 图标
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @property \Illuminate\Support\Carbon|null $deleted_at
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr query()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereDeletedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereFieldName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereIcon($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr wherePid($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Fangattr whereUpdatedAt($value)
 * @mixin \Eloquent
 */
class Fangattr extends Base
{
    //添加动态添加对象
    protected  $appends = ['actionBtn'];

    //观察者 boot 模型对象第一个执行的方法
    protected  static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        //注册观察者
        self::observe(FangAttrObserver::class);
    }

    //修改按钮和删除按钮
    public function getActionBtnAttribute()
    {
        return $this->editBtn('admin.fangattr.edit'). ' '. $this->delBtn('admin.fangattr.destroy');
    }

    //获取修改icon字段输出
    public function getIconAttribute()
    {
        if (stristr($this->attributes['icon'],'http')){
            return $this->attributes['icon'];
        }
        return self::$host . '/' . ltrim($this->attributes['icon'],'/');
    }
}
